import os
import asyncio
from telethon import TelegramClient, events

try:
    from config import API_ID, API_HASH, session_name
except ModuleNotFoundError:
    print("HATA: config.py dosyasÄ± bulunamadÄ±!")
    print("LÃ¼tfen config.py.example dosyasÄ±nÄ± kopyalayÄ±p config.py olarak dÃ¼zenleyin")
    exit(1)
except ImportError as e:
    print(f"HATA: Config dosyasÄ±nda eksik bilgi: {e}")
    exit(1)

# Client oluÅŸturma
client = TelegramClient(session_name, API_ID, API_HASH)

@client.on(events.NewMessage(outgoing=True, pattern=r'\.alive'))
async def alive(event):
    await event.edit("âœ… **JudgeUserBot Aktif!**")

@client.on(events.NewMessage(outgoing=True, pattern=r'\.help'))
async def help(event):
    help_text = """
**ğŸ¤– JudgeUserBot KomutlarÄ±**

`.alive` - Bot durumunu kontrol et
`.help` - Bu yardÄ±m mesajÄ±nÄ± gÃ¶ster
`.reboot` - Botu yeniden baÅŸlat
"""
    await event.edit(help_text)

async def main():
    print("\nâœ¨ JudgeUserBot baÅŸarÄ±yla baÅŸlatÄ±ldÄ±!")
    print(f"ğŸ“Œ Oturum dosyasÄ±: {session_name}.session")
    await client.start()
    await client.run_until_disconnected()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nBot kapatÄ±ldÄ±")
    except Exception as e:
        print(f"Beklenmeyen hata: {e}")
